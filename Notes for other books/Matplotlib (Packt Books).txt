Matplotlib for Python Developers
Chapter 02
import matplotlib.pyplot as plt
plt.plot(data1, label='Test') #this does the actual plotting, the label allows it to be shown on the legend
plt.plot(data2)
plt.axis([xMin, xMax, yMin, yMax]) #sets axis mins and maxs 
plt.axis([xMin=#, xMax=#, yMin=#, yMax=#]) #alternative way to setup axis
plt.title('Title Example')
plt.xlabel('x axis Example')
plt.ylabel('y axis Example')
plt.legend()
plt.show()
plt.savefig('fileName.png', dpi=#)

import matplotlib as mpl
mpl.use('GTKAgg') #to use the GTK UI

Chapter 03
points mark positions in graphs and are known as markers
plt.plot(data, formatting)
plt.xticks()
plt.yticks()

Chapter 04
For the Object-Oriented style of graphing
import matplotlib.pyplot as plt
import numpy as np
fig = plt.figure()
ax1 = fig.add_subplot(numrows, numcols, fignum) #this is great for the location of the subplot
ax1.plot(data)
ax2 = fig.add_subplot(numrows, numcols, fignum)
ax2.plot(data)
Date formatting
Matplotlib uses a floating point number to represent the number of days since 0001-01-01 00:00:00 UTC
date2num()
num2date()
drange(dstart, dend, delta) #takes datetime objects
Axes formatting ticks
locators: control the tick's position
formatters: control the formatting of labels
MinuteLocator
HourLocator
DayLocator
WeekdayLocator
MonthLocator
YearLocator
strftime()


















